AWSTemplateFormatVersion: "2010-09-09"

# This template deploys a VPC, with a pair of public and private subnets spread
# across two Availability Zones. It deploys an Internet Gateway, with a default
# route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ),
# and default routes for them in the private subnets.
Description: >
  This template deploys a basic VPC with two public and private subnets in it.

Parameters:
  # Metadata
  EnvironmentName:
    Description: A name that will be prefixed to resource names based on the environment
    Type: String

  TemplateBucketURL:
    Description: URL of the S3 bucket where CloudFormation templates are stored
    Type: String

  # VPC
  VpcCIDR:
    Description: Please enter the VPC's CIDR
    Type: String

  # AZ1
  PublicSubnet1CIDR:
    Description: Please enter the first public subnet CIDR
    Type: String

  PrivateSubnet1CIDR:
    Description: Please enter the first private subnet CIDR
    Type: String

  Ip1AllocationId:
    Description: Allocation ID for first IP
    Type: String
    Default: ""

  # AZ2
  PublicSubnet2CIDR:
    Description: Please enter the second public subnet CIDR
    Type: String

  PrivateSubnet2CIDR:
    Description: Please enter the second private subnet CIDR
    Type: String

  Ip2AllocationId:
    Description: Allocation ID for second IP
    Type: String
    Default: ""

  # AZ3 (optional)
  PublicSubnet3CIDR:
    Description: Please enter the third public subnet CIDR
    Type: String
    Default: ""

  PrivateSubnet3CIDR:
    Description: Please enter the third private subnet CIDR
    Type: String
    Default: ""

  Ip3AllocationId:
    Description: Allocation ID for third IP
    Type: String
    Default: ""

Conditions:
  # Only create third subnet pair if both CIDRs for third public & private subnets are present
  createThirdSubnetPair: !And
    - !Not [!Equals [!Ref PublicSubnet3CIDR, ""]]
    - !Not [!Equals [!Ref PrivateSubnet3CIDR, ""]]

Mappings:
  TemplateLocations:
    Infrastructure:
      subnetPairPath: "infrastructure/subnet-pair.yaml"

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          # Value: development-vpc, staging-vpc, production-vpc
          Value: !Join ["-", [!Ref EnvironmentName, "vpc"]]

  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Join ["-", [!Ref EnvironmentName, "igw"]]

  VpcIgwAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref IGW
      VpcId: !Ref VPC

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref EnvironmentName, "public-route-table"]]

  PublicRouteTableIGWRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
      RouteTableId: !Ref PublicRouteTable

  # AZ1
  SubnetPair1:
    Type: AWS::CloudFormation::Stack
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      TemplateURL: !Join
        - "/"
        - - !Ref TemplateBucketURL
          - !FindInMap [TemplateLocations, Infrastructure, subnetPairPath]
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        VpcId: !Ref VPC
        PublicRouteTableId: !Ref PublicRouteTable
        PublicSubnetCIDR: !Ref PublicSubnet1CIDR
        PrivateSubnetCIDR: !Ref PrivateSubnet1CIDR
        IpAllocationId: !Ref Ip1AllocationId
        SubnetPairIndex: "1"
        AvailabilityZone: !Select [0, !GetAZs ""]

  # AZ2
  SubnetPair2:
    Type: AWS::CloudFormation::Stack
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      TemplateURL: !Join
        - "/"
        - - !Ref TemplateBucketURL
          - !FindInMap [TemplateLocations, Infrastructure, subnetPairPath]
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        VpcId: !Ref VPC
        PublicRouteTableId: !Ref PublicRouteTable
        PublicSubnetCIDR: !Ref PublicSubnet2CIDR
        PrivateSubnetCIDR: !Ref PrivateSubnet2CIDR
        IpAllocationId: !Ref Ip2AllocationId
        SubnetPairIndex: "2"
        AvailabilityZone: !Select [1, !GetAZs ""]

  # AZ3 (optional)
  SubnetPair3:
    Type: AWS::CloudFormation::Stack
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: createThirdSubnetPair
    Properties:
      TemplateURL: !Join
        - "/"
        - - !Ref TemplateBucketURL
          - !FindInMap [TemplateLocations, Infrastructure, subnetPairPath]
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        VpcId: !Ref VPC
        PublicRouteTableId: !Ref PublicRouteTable
        PublicSubnetCIDR: !Ref PublicSubnet3CIDR
        PrivateSubnetCIDR: !Ref PrivateSubnet3CIDR
        IpAllocationId: !Ref Ip3AllocationId
        SubnetPairIndex: "3"
        AvailabilityZone: !Select [2, !GetAZs ""]

Outputs:
  VpcId:
    Description: The ID used to refer to the created VPC
    Value: !Ref VPC

  PublicSubnet1:
    Description: The first public subnet's reference
    Value: !GetAtt SubnetPair1.Outputs.PublicSubnet

  PrivateSubnet1:
    Description: The first private subnet's reference
    Value: !GetAtt SubnetPair1.Outputs.PrivateSubnet

  PublicSubnet2:
    Description: The second public subnet's reference
    Value: !GetAtt SubnetPair2.Outputs.PublicSubnet

  PrivateSubnet2:
    Description: The second private subnet's reference
    Value: !GetAtt SubnetPair2.Outputs.PrivateSubnet

  PublicSubnet3:
    Condition: createThirdSubnetPair
    Description: The third public subnet's reference
    Value: !GetAtt SubnetPair3.Outputs.PublicSubnet

  PrivateSubnet3:
    Condition: createThirdSubnetPair
    Description: The third private subnet's reference
    Value: !GetAtt SubnetPair3.Outputs.PrivateSubnet
